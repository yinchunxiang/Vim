# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
snippet uns
	using namespace ${1:std};${2}

# Class
snippet cl
	class ${1:`Filename('$1_t', 'name')`} {
	public:
		$1 (${2:arguments});
		virtual ~$1 ();
	
	private:
		${3:/* data */}
	};

snippet inc	
	#include <${1:iostream}>${2}

snippet printv
	void printv(vector<${1:int}>& v) {
		for (int i = 0; i < v.size(); ++i) {
			cout << v[i] << " ";
		}
		cout << endl;
	}

snippet printvv
	void printvv(vector<vector<${1:int}> >& vv) {
		for (int i = 0; i < vv.size(); ++i) {
			for(int j = 0; j < vv[i].size(); ++j) {
				cout << v[i][j] << " ";
			}
			cout << endl;
		}
		cout << endl;
	}
